theMatrix<- matrix(1:9,nrow = 3)
apply(theMatrix,1,sum)
theMatrix
apply(theMatrix,2,sum)
rowSums(theMatrix)
colSums(theMatrix)
theMatrix[2,1]<- NA
apply(theMatrix,1,sum)
apply(theMatrix,1,sum,na.rm=TRUE)
rowSums(theMatrix)
rowSums(theMatrix,na.rm = TRUE)
theList<- list(A=matrix(1:9,3),B=1:5,C=matrix(1:4,2),D=2)
lapply(theList,sum)
sapply(thelist, sum)
sapply(theList, sum)
theNames<- c("Jared","Deb")
lapply(theNames,nchar)
List1<- list(A=matrix(1:16,4),B=matrix(1:16,2),C=1:5)
List2<- list(A=matrix(1:16,4),B=matrix(1:16,8),C=15:1)
mapply(identical,List1,List2)
simpleFunc<- function(x,y)
{
NROW(x)+NROW(y)
}
mapply(simpleFunc,List1,List2)
List1
List2
NROW(List1)
NROW(B)
NROW(c)
NROW(C)
require(ggplot2)
data("diamonds")
head(diamonds)
aggregate(price~cut,diamonds,mean)
aggregate(price~cut,diamonds,sum)
aggregate(price~cut + color,diamonds,mean)
aggregate(cbind(price,carat)~cut,diamonds,mean)
aggregate(cbind(price,carat)~cut + color,diamonds,mean)
require(plyr)
head(baseball)
baseball$sf[baseball$year<1954]<-0
any(is.na(baseball$sf))
baseball$hbp[is.na(baseball$hbp)]<-0
any(is.na(baseball$hbp))
baseball<- baseball[baseball$ab>= 50,]
baseball$OBP<- with(baseball,(h+bb+hbp)/(ab+bb+hbp+sf))
tail(baseball)
head(baseball)
obp<- function(data)
{
c(OBP=with(data,sum(h+bb+hbp)/sum(ab+bb+hbp+sf)))
}
careerOBP<- ddply(baseball,.variables = "id",.fun = obp)
careerOBP<- careerOBP[order(careerOBP$OBP,decreasing = TRUE),]
head(careerOBP,10)
any(is.na(baseball$ibb))
any(is.na(baseball$hbp))
# calculate OBP
baseball$OBP<- with(baseball,(h+bb+hbp)/(ab+bb+hbp+sf))
head(baseball)
any(is.na(baseball$sf))
head(baseball$OBP)
careerOBP<- ddply(baseball,.variables = "id",.fun = obp)
head(careerOBP,10)
careerOBP<- careerOBP[order(careerOBP$OBP),]
head(careerOBP,10)
careerOBP<- careerOBP[order(careerOBP$OBP)]
careerOBP<- ddply(baseball,.variables = "year",.fun = obp)
careerOBP<- careerOBP[order(careerOBP$OBP,decreasing = TRUE),]
head(careerOBP,10)
# llply
theList<- list(A=matrix(1:9,3),B=1:5,C=matrix(1:4,2),D=2)
lapply(theList, sum)
identical(lapply(theList,sum), llply(theList,sum))
sapply(theList,sum)
aggregate(price~cut,diamonds,each(mean,median))
system.time(dlply(baseball,"id",nrow))
iBaseball<- idata.frame(baseball)
system.time(dlply(baseball,"id",nrow))
system.time(dlply(iBaseball,"id",nrow))
require(data.table)
theDF<- data.frame(A=1:10,B=letters[1:10],C=LETTERS[11:20],D=rep(c("one","two","three"),length.out=10))
theDT<- data.table(A=1:10,B=letters[1:10],C=LETTERS[11:20],D=rep(c("one","two","three"),length.out=10))
theDF
theDT
class(theDF$B)
class(theDT$B)
diamondsDT<- data.table(diamonds)
diamondsDT
theDT[1:2,]
savehistory("~/1119.Rhistory")
install.packages("sqldf")
library("sqldf", lib.loc="C:/Program Files/R/R-3.5.1/library")
detach("package:RSQLite", unload=TRUE)
sqldf("SELECT * FROM `b每日数据明细` WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
require(RODBC)
db<- odbcConnect("mysql")
Table1<- sqlQuery(db,"SELECT * FROM `b每日数据明细` WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
head(Table1)
colnames(Table1) <- iconv(colnames(Table1),from="UTF-8",to="GBK")
head(Table1)
nm<- dbConnect(MYSQL(),user="root",password="pei0601.",dbname="sales",host="192.168.168.154")
library(RMySQL)
nm<- dbConnect(MYSQL(),user="root",password="pei0601.",dbname="sales",host="192.168.168.154")
sqldf("SELECT * FROM `b每日数据明细` WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
library(sqldf)
sqldf("SELECT * FROM `b每日数据明细` WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
install.packages("RMySQL",type="source")
install.packages("RMySQL", type = "source")
library(RMySQL)
head(dia)
tables()
require(ggplot2)
data("diamonds")
head(diamonds)
aggregate(price~cut,diamonds,mean)
head(用户信息表)
data("用户信息表")
aggregate(price~cut,diamonds,sum)
aggregate(price~cut + color,diamonds,mean)
aggregate(cbind(price,carat)~cut,diamonds,mean)
aggregate(cbind(price,carat)~cut + color,diamonds,mean)
require(RODBC)
my<- odbcConnect("mysql")
Table1<- sqlQuery(my,"SELECT * FROM 表名 WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
head(Table1)
Table1<- sqlQuery(my,"SELECT * FROM b 每日数据明细 WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
head(Table1)
Table1<- sqlQuery(my,"SELECT * FROM b每日数据明细 WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
head(Table1)
colnames(Table1) <- iconv(colnames(Table1),from="UTF-8",to="GBK")
head(Table1)
aggregate(到账金额~销售部门,Table1,sum)
aggregate(到账金额~销售人员,Table1,mean)
aggregate(到账金额~销售人员+销售部门,Table1,mean)
savehistory("~/1121.Rhistory")
savehistory("~/Git/soul-mate/1121.Rhistory")
