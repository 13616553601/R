paste("hello","Jared","And other")
paste(C("Hello","Hey","Howdy"),c("Jared","Bod","David"))
paste(c("Hello","Hey","Howdy"),c("Jared","Bod","David"))
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql")
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql2")
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql2")
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql")
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql")
head(Table1)
Table1<- sqlQuery(db,"select * from `b每日数据明细` where QUARTER(日期)=QUARTER(now())")
Table1<- sqlQuery(db,"select * from `b每日数据明细` where QUARTER(日期)=QUARTER(now())")
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql")
Table1<- sqlQuery(db,"select * from `b每日数据明细` where QUARTER(日期)=QUARTER(now())")
require(RODBC)
Table1<- sqlQuery(db,"select * from `b每日数据明细` where QUARTER(日期)=QUARTER(now())")
library(odbc)
con <- dbConnect(odbc::odbc(), "mysql")
Table1<- sqlQuery(con,"select * from `b每日数据明细` where QUARTER(日期)=QUARTER(now())")
require(RODBC)
db<- odbcConnect("mysql")
Table1<- sqlQuery(db,"SELECT * FROM `b每日数据明细` WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
head(Table1)
head(Table1)
Table2<- sqlQuery(db,"SELECT * FROM `c意向客户明细` WHERE DATE_FORMAT( 日期, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )")
head(Table2)
head(Table2)
require(reshape)
head(tips)
require(ggplot2)
aggregate(tip~sex,data=tips,var)
shapiro.test(tips$tip)
ggplot(tips,aes(x=tip,fill=sex))+geom_histogram(binwidth = .5,alpha=1/2)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep=",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep=",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/housing.csv",sep=",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/housing.csv",sep=",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/housing.csv",sep=",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/housing.csv",sep=",",header = TRUE,stringsAsFactors = FALSE)
require(ggplot2)
require(UsingR)
require(ggplot2)
heaf
head(father.son)
ggplot(father.son,aes(x=fheight,y=fheight))+geom_smooth(method = "lm")+labs(x="fathers",y="sons")
heightslm<- lm(sheight-fheight,data=father.son)
heightslm<- lm(sheight~fheight,data=father.son)
heightslm
summary
summary(heightslm)
head(housing)
h1<- read.table("https://www.jaredlander.com/data/housing.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
head(h1)
ggplot(housing,aes(x=Mark.Value.per.SqFt,y=ValuePerSqFt))+geom_point()
ggplot(housing,aes(x=Market.Value.per.SqFt,y=ValuePerSqFt))+geom_point()
ggplot(housing,aes(x=SqFt,y=ValuePerSqFt))+geom_point()
ggplot(housing,aes(x=Gross.SqFt,y=ValuePerSqFt))+geom_point()
head(h1$Gross.SqFt)
head(h1$Market.Value.per.SqFt)
ggplot(housing,aes(x=Gross.SqFt,y=Market.Value.per.SqFt))+geom_point()
names(housing)<- c("Neighborhood","Class","Units","YearBuilt","SqFt","IncomePerSqFt","Expense","ExpensePerSqFt","NetIncome","Value","ValuePerSqFt","Boro")
names(h1)<- c("Neighborhood","Class","Units","YearBuilt","SqFt","IncomePerSqFt","Expense","ExpensePerSqFt","NetIncome","Value","ValuePerSqFt","Boro")
ggplot(h1,aes(x=SqFt,y=ValuePerSqFt))+geom_point()
ggplot(h1,aes(x=log(SqFt),y=ValuePerSqFt))+geom_point()
ggplot(h1,aes(x=SqFt,y=log(ValuePerSqFt))+geom_point()
)
ggplot(h1,aes(x=SqFt,y=log(ValuePerSqFt))+geom_point()
)
ggplot(h1,aes(x=SqFt,y=log(ValuePerSqFt)))+geom_point()
ggplot(h1,aes(x=log(SqFt),y=log(ValuePerSqFt)))+geom_point()
ggplot(h1,aes(x=log(Units),y=log(ValuePerSqFt)))+geom_point()
house1<- lm(ValuePerSqFt~Units+SqFt+Boro,data=h1)
summary(house1)
save.image("~/Git/soul-mate/2019.1.2.RData")
load("~/Git/soul-mate/2019.1.2.RData")
load("~/Git/soul-mate/2019.1.2.RData")
h1<- read.table("https://www.jaredlander.com/data/housing.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
head(h1)
ggplot(housing,aes(x=Mark.Value.per.SqFt,y=ValuePerSqFt))+geom_point()
ggplot(housing,aes(x=Gross.SqFt,y=ValuePerSqFt))+geom_point()
head(h1$Gross.SqFt)
names(housing)<- c("Neighborhood","Class","Units","YearBuilt","SqFt","IncomePerSqFt","Expense","ExpensePerSqFt","NetIncome","Value","ValuePerSqFt","Boro")
summary(house1)
summary(house1)
coef(house1)
load("~/Git/soul-mate/2019.1.2.RData")
coef(house1)
require(coefplot)
install.packages("coefplot")
require(coefplot)
coefplot(house1)
house1<- lm(ValuePerSqFt~Units+SqFt+Boro,data=housing)
house1<- lm(ValuePerSqFt~Units+SqFt+Boro,data=h1)
coefplot(house1)
house2<- lm(ValuePerSqFt~Units*SqFt+Boro,data=h1)
house3<- lm(ValuePerSqFt~Units:SqFt+Boro,data=h1)
coefplot(house2)
coefplot(house3)
house2$coefficients
house3$coefficients
house4<- lm(ValuePerSqFt~Units*SqFt*Boro,data=h1)
coefplot(house4)
house5<- lm(ValuePerSqFt~SqFt*Units*Income,h1)
names(housing)<- c("Neighborhood","Class","Units","YearBuilt","SqFt","IncomePerSqFt","Expense","ExpensePerSqFt","NetIncome","Value","ValuePerSqFt","Boro")
names(h1)<- c("Neighborhood","Class","Units","YearBuilt","SqFt","IncomePerSqFt","Expense","ExpensePerSqFt","NetIncome","Value","ValuePerSqFt","Boro")
house5<- lm(ValuePerSqFt~SqFt*Units*Income,h1)
house5<- lm(ValuePerSqFt~SqFt*Units*Income,data=h1)
house5<- lm(ValuePerSqFt~SqFt*Units*NetIncome,data=h1)
coefplot(house5)
multiplot(house1,house2,house3,house4,house5)
h2<- read.table("https://www.jaredlander.com/data/housingNew.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
housePerdict<- predict(house1,newdata = h2,se.fit = TURE,interval = "prediction",level = .95)
housePerdict<- predict(house2,newdata = h2,se.fit = TURE,interval = "prediction",level = .95)
housePerdict<- predict(house3,newdata = h2,se.fit = TURE,interval = "prediction",level = .95)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs$Income<- with(acs,FamilyIncome>=150000)
require(ggplot2)
require(useful)
ggplot(acs,aes(x=FamilyIncome))+geom_density(fill="grey",color="grey")+geom_vline(xintercept = 150000)+scale_x_continuous(lable=multiple.dollar,limits = c(0,1000000))
head(acs)
incomel<- glm(Income~HouseCosts+NumWorkers+OwnRent+NumBedrooms+FamilyType,data = acs,family = binomial(link = "logit"))
summary
summary(incomel)
invlogit<- function(x)
{
1/(1+exp(-x))
}
invlogit(income1$coefficients)
invlogit(incomel$coefficients)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
h2<- read.table("https://www.jaredlander.com/data/housingNew.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
head(h2)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://www.jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://www.jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://www.jaredlander.com/data/housing1.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://www.jaredlander.com/data/housing.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
h3<- read.table("http://www.jaredlander.com/data/housing.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
hou<- read.table("https://www.jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("http://jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs<- read.table("https://jaredlander.com/data/acs_ny.csv",sep = ",",header = TRUE,stringsAsFactors = FALSE)
acs$Income<- with(acs,FamilyIncome>=150000)
require(ggplot2)
require(useful)
ggplot(acs,aes(x=FamilyIncome))+geom_density(fill="grey",color="grey")+geom_vline(xintercept = 150000)+scale_x_continuous(lable=multiple.dollar,limits = c(0,1000000))
ggplot(acs,aes(x=FamilyIncome))+
geom_density(fill="grey",color="grey")+
geom_vline(xintercept = 150000)+
scale_x_continuous(labels = multiple.dollar,limits = c(0,1000000))
head(acs)
incomel<- glm(Income~HouseCosts+NumWorkers+OwnRent+NumBedrooms+FamilyType,data = acs,family = binomial(link = "logit"))
summary(incomel)
invlogit<- function(x)
{
1/(1+exp(-x))
}
invlogit(income1$coefficients)
invlogit(incomel$coefficients)
savehistory("~/Git/soul-mate/20190107.Rhistory")
